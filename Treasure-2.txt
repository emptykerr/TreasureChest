class TreasureChest {
  
public static void main(String[] args) {
	TreasureChest chest = new TreasureChest();
	report(chest.getDescription());
	scenarioHeader("Unlock then open:");
	chest.unlock();
	report(chest.getDescription());
	chest.open();
	report(chest.getDescription());
	scenarioHeader("Lock from opened state:");
	chest.lock();
	report(chest.getDescription());
	scenarioHeader("Lock from closed state:");
	chest.unlock();
	chest.open();
	chest.close();
	chest.lock();
	report(chest.getDescription());
}
  
static void report(String message) {
	System.out.println(message);
}
  
static void scenarioHeader(String message) {
	report("\n"+message);
	report("------------------------------".substring(1,message.length()));
}
  
String getDescription() {
	return "The old treasure chest is " + chestStatus() + ".";
}
  
ChestLid {
    
    Locked{
      String chestStatus(){return "locked";}
      
      [playerHasKey()] unlock -> Closed;
    }
    
    Unlocked{
		Closed {
		String chestStatus() {return "closed";}
        
         [playerHasKey()] lock / {
         	report("You closed the lid of the chest.");
          	report("You lock the chest with your key.");
         } -> Locked;
          
		open / {report("You hear a creaking sound.");} -> Opened;
		}
  
		Opened {
		String chestStatus() {return "open";}
          
		[playerHasKey()] lock / {
         report("Thud! The chest closes with a loud noise");
         report("You lock the chest with your key.");
         } -> Locked;
          
		close / {
         	report("Thud! The chest closes with a loud noise.");
        } -> Closed;

		}
	}
}
  
Boolean playerHasKey(){
    return true;
  
}
  
}

//$?[End_of_model]$?

namespace -;


class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}