class TreasureChest {
  
public static void main(String[] args) {
	TreasureChest chest = new TreasureChest();
    report(chest.getDescription());
    scenarioHeader("Unlock then open:");
    chest.unlock();
    report(chest.getDescription());
    chest.open();
    report(chest.getDescription());
    scenarioHeader("Lock from opened state:");
    chest.lock();
    report(chest.getDescription());
    scenarioHeader("Lock from closed state:");
    chest.unlock();
    chest.open();
    chest.close();
    chest.lock();
    report(chest.getDescription());
    scenarioHeader("Force lock from opened state:");
    chest.unlock();
    chest.open();
    chest.forceLock();
    report(chest.getDescription());
    
    scenarioHeader("Let the chest close itself:");
    chest.unlock();
    chest.open();
    report("You marvel at the contents of the old treasure chest...");
 try {
    Thread.sleep(4000); // wait for 4s, allowing the chest to close itself
 } catch (Exception e) {};
    report(chest.getDescription());
}
  
Boolean playerHasKey() {
	return true;
}
  
  
static void report(String message) {
  	System.out.println(message);
}
  
static void scenarioHeader(String message) {
   	report("\n"+message);
  	report("------------------------------"
           .substring(1,message.length()));
}
  
String getDescription() {
  	return "The old treasure chest is " + chestStatus() + ".";
}
  
ChestDoor {
    
    Locked {
      	String chestStatus() {
        	return "locked";
        }
      	
      	[playerHasKey()] unlock -> Closed;
    }
    
    Unlocked {
      Closed {
              String chestStatus() {
                  return "closed";   
              }
        
        	  [playerHasKey()] lock / {
                  report("You closed the lid of the chest.");
              	  report("You lock the chest with your key.");
              } -> Locked;
        
              open / {
                  report("You hear a creaking sound.");
              } -> Opened;
      }

      Opened {
              String chestStatus() {
                  return "open";   
              }
        
        	  after(2) / {
                report("Thud! The chest closes with a loud noise.");
              	report("The chest just closed itself!"); 
              } -> Closed;
        
        	  [playerHasKey()] lock / {
              	report("Thud! The chest closes with a loud noise.");
                report("You lock the chest with your key.");
              } -> Locked;
        		
              close / {
                  report("Thud! The chest closes with a loud noise.");
              } -> Closed;
          }
      
      forceLock / {
        	  report("Thud! The chest closes with a loud noise.");
              report("You lock the chest with your welding equipment.");
            } -> Locked;
      }
  	}
  }
}

//$?[End_of_model]$?

namespace -;


class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}

class TreasureChest
{
  position 50 30 109 45;
}